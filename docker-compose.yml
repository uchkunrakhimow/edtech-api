services:
  api:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        - NODE_ENV=production
    ports:
      - '3000:3000'
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgresql://postgres:postgrespasswd@db:5432/edtechapp
    env_file:
      - .env.example
    networks:
      - app-network
    restart: unless-stopped
    container_name: api
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:3000/health']
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 15s
    logging:
      driver: 'json-file'
      options:
        max-size: '10m'
        max-file: '3'

  db:
    image: postgres:14-alpine
    ports:
      - '5432:5432'
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgrespasswd
      - POSTGRES_DB=edtech
    volumes:
      - dbdata:/var/lib/postgresql/data
    restart: unless-stopped
    networks:
      - app-network
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U postgres']
      interval: 10s
      timeout: 5s
      retries: 5
    logging:
      driver: 'json-file'
      options:
        max-size: '10m'
        max-file: '3'

networks:
  app-network:
    driver: bridge

volumes:
  dbdata:
    driver: local
